{"version":3,"sources":["shared/components/UIElements/Avatar.js","shared/components/UIElements/Card.js","user/components/UserItem.js","user/components/UsersList.js","shared/components/Navigation/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","user/pages/Users.js","shared/components/context/auth-context.js","shared/components/FormElements/ImageUpload.js","places/pages/NewPlace.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","places/pages/UpdatePlace.js","user/pages/Auth.js","App.js","index.js"],"names":["Avatar","props","className","style","src","image","alt","width","height","Card","children","UserItem","to","id","name","UsersList","items","map","user","placeCount","places","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button","href","size","inverse","danger","exact","type","disabled","ErrorModal","onClear","error","LoadingSpinner","asOverlay","Users","useState","isLoading","setIsLoading","setError","loadedUsers","setLoadedUsers","useEffect","sendRequest","a","fetch","response","json","responseData","ok","Error","message","users","AuthContext","createContext","isLoggedIn","userId","login","logout","ImageUpload","file","setFile","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","onChange","pickedFile","fileIsValid","target","files","length","onInput","center","current","click","errorText","NewPlace","auth","useContext","initialvalue","setValue","inputHandler","value","errorHandler","history","useHistory","initialValues","title","description","address","validate","values","errors","setSubmitting","method","headers","body","JSON","stringify","creator","push","touched","handleChange","handleBlur","handleSubmit","isSubmitting","onBlur","color","rows","MainHeader","NavLinks","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawer","Map","mapRef","window","ol","layers","layer","Tile","source","OSM","view","View","proj","fromLonLat","lng","lat","zoom","PlaceItem","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","showDeleteWarningHandler","cancelDeleteHandler","confirmDeleteHandler","onDelete","coordinates","creatorId","PlaceList","place","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","deletedPlaceId","prevPlaces","filter","UpdatePlace","placeId","loadedPlace","setLoadedPlace","Auth","isLoginMode","setIsLoginMode","switchModeHandler","prevMode","email","password","test","backgroundColor","border","App","routes","setIsLoggedIn","setUserId","useCallback","uid","path","Provider","render","StrictMode"],"mappings":"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","file":"static/js/main.beba3f0a.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\r\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport \"./UserItem.css\"\r\n\r\nfunction UserItem(props){\r\n    return(\r\n        <li className=\"user-item\">\r\n            <Card className=\"user-item__content\">   \r\n                <Link to={`/${props.id}/places`}> \r\n                    <div className=\"user-item__image\">\r\n                        <Avatar image={props.image} alt={props.name} />\r\n                    </div>\r\n                    <div className=\"user-item__info\">\r\n                        <h2>{props.name}</h2>\r\n                        \r\n                    </div>\r\n                </Link>\r\n            </Card>\r\n\r\n        </li>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default UserItem;","import React from \"react\";\r\nimport UserItem from \"./UserItem\";\r\nimport \"./UsersList.css\";\r\nfunction UsersList(props){\r\n    return(\r\n        <ul className=\"users-list\">\r\n        {props.items.map(user => (\r\n          <UserItem \r\n            key={user.id}\r\n            id={user.id}\r\n            image={user.image}\r\n            name={user.name}\r\n            placeCount={user.places}  \r\n          />  \r\n        ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default UsersList;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Backdrop from \"../Navigation/Backdrop\"\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = props => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${props.inverse &&\r\n        'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport UsersList from '../components/UsersList';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\n\r\nconst Users = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n  const [loadedUsers, setLoadedUsers] = useState();\r\n  \r\n\r\n  useEffect(() => {\r\n    const sendRequest = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await fetch('https://places-appstream.herokuapp.com/api/users');\r\n\r\n        const responseData = await response.json();\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setLoadedUsers(responseData.users);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n    sendRequest();\r\n  }, []);\r\n\r\n  const errorHandler = () => {\r\n    setError(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={errorHandler} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n    isLoggedIn:false, userId: null, login:()=>{},logout:()=>{}\r\n});","import React, { useRef, useState, useEffect } from 'react';\r\n\r\nimport Button from './Button';\r\nimport './ImageUpload.css';\r\n\r\nconst ImageUpload = props => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = event => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: 'none' }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && 'center'}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, {useState, useContext, useCallback, useReducer} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport './NewPlace.css';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { AuthContext } from '../../shared/components/context/auth-context';\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\r\n\r\nconst NewPlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n  const [initialvalue, setValue] = useState(null);\r\n\r\n  \r\n  const inputHandler = (id, value, isValid) => {\r\n    setValue(value);\r\n  }\r\n\r\n\r\n\r\n  const switchModeHandler = () => {\r\n      setIsLoginMode(prevMode => !prevMode);\r\n  }\r\n\r\n  const errorHandler = () => {\r\n    setError(null);\r\n  };\r\n\r\n  const history = useHistory();\r\n  return (\r\n  <div className='form-control'>\r\n    <Formik \r\n      initialValues={{ title: '', description: '', address:'', image: { value: initialvalue} }}\r\n      validate={values => {\r\n        const errors = {};\r\n        if (!values.title) {\r\n          errors.title = 'Required';\r\n        } \r\n        return errors;\r\n      }}\r\n      onSubmit={async (values, { setSubmitting }) => {\r\n              setSubmitting(false);\r\n              setIsLoading(true);            \r\n              \r\n              try{\r\n                const response = await fetch('https://places-appstream.herokuapp.com/api/places', {\r\n                  method: 'POST',\r\n                  headers: {\r\n                    'Content-Type': 'application/json',\r\n                  },\r\n                  body: JSON.stringify({\r\n                    title: values.title,\r\n                    description: values.description,\r\n                    address: values.address,\r\n                    creator: auth.userId,\r\n                    image: values.image.value\r\n                  })\r\n                });\r\n\r\n                const responseData = await response.json();\r\n                // console.log(responseData);\r\n                if (!response.ok) {\r\n                  throw new Error(responseData.message);\r\n                }\r\n                setIsLoading(false);\r\n\r\n                history.push('/');\r\n              \r\n              } catch (err) {\r\n                setIsLoading(false);\r\n                setError(err.message || 'Something went wrong, please try again.');\r\n              }\r\n\r\n              // auth.login();\r\n            }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        /* and other goodies */\r\n      }) => (\r\n        <React.Fragment>\r\n        <ErrorModal error={error} onClear={errorHandler} />\r\n        <form onSubmit={handleSubmit} className =\"place-form\">\r\n         {isLoading && <LoadingSpinner asOverlay />}\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.title}\r\n          />\r\n          <p style={{color:\"red\"}}>{errors.title && touched.title && errors.title}</p>\r\n          <label>Description</label>\r\n          <textarea\r\n            type=\"text\"\r\n            name=\"description\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            rows={3}\r\n            value={values.description}\r\n          />\r\n          <label>Address</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"address\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.address}\r\n          />\r\n          <ImageUpload id=\"image\" onInput={inputHandler} />\r\n          <button type=\"submit\" disabled={isSubmitting}>\r\n            Add Place\r\n          </button>\r\n        </form>\r\n        </React.Fragment>\r\n      )}\r\n    </Formik>\r\n  </div>\r\n  \r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n ","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, {useContext} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport \"./NavLinks.css\";\r\nimport { AuthContext } from \"../context/auth-context\";\r\n\r\nfunction NavLinks(props){\r\n    const auth = useContext(AuthContext);\r\n\r\n    return (\r\n        <ul className=\"nav-links\">\r\n            <li>\r\n                <NavLink to=\"/\" exact>Home</NavLink>\r\n            </li>\r\n            {auth.isLoggedIn && (\r\n            <li>\r\n                <NavLink to={`/${auth.userId}/places`}>My Places</NavLink>\r\n            </li> )}\r\n            {auth.isLoggedIn && (\r\n            <li>\r\n                <NavLink to=\"/places/new\">Add Place</NavLink>\r\n            </li>)}\r\n            {!auth.isLoggedIn && (\r\n            <li>\r\n                <NavLink to=\"/auth\">Log In</NavLink>\r\n            </li>)} \r\n            {auth.isLoggedIn && (\r\n                <li>\r\n                    <button onClick={auth.logout}>LogOut</button>\r\n                </li>\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default NavLinks;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {CSSTransition} from 'react-transition-group';\r\n\r\nimport './SideDrawer.css';\r\n\r\nconst SideDrawer = props => {\r\n  const content = (\r\n    <CSSTransition\r\n    in={props.show}\r\n    timeout={200}\r\n    classNames=\"slide-in-left\"\r\n    mountOnEnter\r\n    unmountOnExit\r\n    >\r\n   <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\r\n   </CSSTransition>\r\n  )\r\n// return <aside className=\"side-drawer\">{props.children}</aside>\r\n\r\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\r\n};\r\n\r\nexport default SideDrawer;","import React, {useState} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport './MainNavigation.css';\nimport Backdrop from './Backdrop';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawer = () => {\n    setDrawerIsOpen(true);\n  }\n\n  const closeDrawer = () => {\n    setDrawerIsOpen(false);\n  }\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawer}/>}\n     <SideDrawer show={drawerIsOpen} onClick={closeDrawer}> \n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n      <MainHeader>\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawer}>\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">YourPlaces</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n\n","// import React, { useRef, useEffect } from 'react';\r\n\r\n// import './Map.css';\r\n\r\n// const Map = props => {\r\n//   const mapRef = useRef();\r\n  \r\n//   const { center, zoom } = props;\r\n\r\n//   useEffect(() => {\r\n//     const map = new window.google.maps.Map(mapRef.current, {\r\n//       center: center,\r\n//       zoom: zoom\r\n//     });\r\n  \r\n//     new window.google.maps.Marker({ position: center, map: map });\r\n//   }, [center, zoom]);  \r\n\r\n//   return (\r\n//     <div\r\n//       ref={mapRef}\r\n//       className={`map ${props.className}`}\r\n//       style={props.style}\r\n//     ></div>\r\n//   );\r\n// };\r\n\r\n// export default Map;\r\nimport React, { useRef, useEffect } from 'react';\r\n\r\nimport './Map.css';\r\n\r\nconst Map = props => {\r\n  const mapRef = useRef();\r\n  \r\n  const { center } = props;\r\n\r\n  useEffect(() => {\r\n    new window.ol.Map({\r\n      target: mapRef.current.id,\r\n      layers: [\r\n        new window.ol.layer.Tile({\r\n          source: new window.ol.source.OSM()\r\n        })\r\n      ],\r\n      view: new window.ol.View({\r\n        center: window.ol.proj.fromLonLat([center.lng, center.lat]),\r\n        zoom: 18\r\n      })\r\n    });\r\n  }, [center]);\r\n\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={props.style}\r\n      id=\"map\"\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Map;","import React, { useState, useContext } from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Modal from '../../shared/components/UIElements/Modal';\r\nimport Map from '../../shared/components/UIElements/Map';\r\nimport { AuthContext } from '../../shared/components/context/auth-context';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport './PlaceItem.css';\r\n\r\n\r\nconst PlaceItem = props => {\r\n  const auth = useContext(AuthContext)\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const errorHandler = () => {\r\n    setError(null);\r\n  };\r\n\r\n  const openMapHandler = () => setShowMap(true);\r\n\r\n  const closeMapHandler = () => setShowMap(false);\r\n\r\n  const showDeleteWarningHandler = async () => {\r\n    setShowConfirmModal(true);\r\n\r\n  }\r\n\r\n  const cancelDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n    \r\n  }\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/places/${props.id}`, { method: 'DELETE'} );\r\n      props.onDelete(props.id)\r\n      } catch(err){\r\n  \r\n      }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={errorHandler} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\"> \r\n          <Map center={props.coordinates} />\r\n        </div>\r\n      </Modal>\r\n      <Modal show={showConfirmModal} onCancel={cancelDeleteHandler}  header=\"Delete\" footerClass=\"place-item__modal-actions\" footer={\r\n        <React.Fragment>\r\n          <Button inverse onClick={cancelDeleteHandler}>Cancel</Button>\r\n          <Button danger onClick={confirmDeleteHandler}>Delete</Button>\r\n        </React.Fragment>\r\n      }>\r\n        <p>Are you sure you want to delete?</p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"place-item__image\">\r\n            <img src={`http://localhost:5000/${props.image}`} alt={props.title} />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>VIEW ON MAP</Button>\r\n            {auth.userId === props.creatorId && <Button to={`/places/${props.id}`}>EDIT</Button>}\r\n            \r\n            {auth.userId === props.creatorId  && <Button danger onClick={showDeleteWarningHandler}>DELETE</Button>}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from \"react\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport './PlaceList.css';\r\nimport PlaceItem from \"./PlaceItem\";\r\n\r\nfunction PlaceList(props){\r\n    if (props.items.length === 0){\r\n        return(\r\n            <div className=\"place-list center\">\r\n                <Card>\r\n                    <h2>No Places Found!</h2>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <ul className=\"place-list\">\r\n            {props.items.map(\r\n                place => (\r\n                    <PlaceItem \r\n                        key={place.id}\r\n                        id={place.id}\r\n                        image={place.image}\r\n                        title={place.title}\r\n                        description={place.description}\r\n                        address={place.address}\r\n                        creatorId={place.creator}\r\n                        coordinates={place.location}\r\n                        onDelete={place.onDeletePlace} />\r\n                )\r\n            )}\r\n        </ul>\r\n\r\n    )\r\n}\r\n\r\nexport default PlaceList; \r\n\r\n","import React, {useState, useContext, useEffect} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport PlaceList from \"../components/PlaceList\";\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\n\r\n\r\n\r\n\r\nfunction UserPlaces(){\r\n     const [isLoading, setIsLoading] = useState(false);\r\n     const [error, setError] = useState();\r\n     const [loadedPlaces, setLoadedPlaces] = useState();\r\n     const userId = useParams().userId;\r\n\r\n\r\n   \r\n     useEffect(() => {\r\n       const sendRequest = async () => {\r\n         setIsLoading(true);\r\n         try {\r\n           const response = await fetch(`https://places-appstream.herokuapp.com/api/places/user/${userId}`);\r\n   \r\n           const responseData = await response.json();\r\n   \r\n           if (!response.ok) {\r\n             throw new Error(responseData.message);\r\n           }\r\n   \r\n           setLoadedPlaces(responseData.place);\r\n         } catch (err) {\r\n           setError(err.message);\r\n         }\r\n         setIsLoading(false);\r\n       };\r\n       sendRequest();\r\n     }, [userId]);\r\n   \r\n     const errorHandler = () => {\r\n       setError(null);\r\n     };\r\n\r\n     const placeDeletedHandler = (deletedPlaceId) => {\r\n          setLoadedPlaces(prevPlaces => prevPlaces.filter(place => place.id != deletedPlaceId))\r\n     };\r\n   \r\n\r\n\r\n     return (\r\n     <React.Fragment>\r\n          <ErrorModal error={error} onClear={errorHandler} />\r\n          {isLoading && (\r\n               <div className='center'>\r\n                    <LoadingSpinner asOverlay />\r\n               </div>\r\n          )}\r\n          {!isLoading && loadedPlaces && <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />}\r\n     </React.Fragment>\r\n    \r\n     )\r\n}\r\n\r\nexport default UserPlaces;\r\n\r\n","import React, {useState, useContext, useEffect} from 'react';\r\nimport { Formik } from 'formik';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport './NewPlace.css';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\n\r\n\r\n\r\nconst UpdatePlace = () => {\r\n  const placeId = useParams().placeId;\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n  const [loadedPlace, setLoadedPlace] = useState();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const sendRequest = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await fetch(`https://places-appstream.herokuapp.com/api/places/${placeId}`);\r\n\r\n        const responseData = await response.json();\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setLoadedPlace(responseData.place);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n    sendRequest();\r\n  }, [placeId]);\r\n\r\n  const errorHandler = () => {\r\n    setError(null);\r\n  };\r\n\r\n\r\n\r\n  if (!loadedPlace) {\r\n    return (\r\n      <div className=\"center\">\r\n        <h2>Could not find place!</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='form-control'>\r\n    <Formik \r\n      initialValues={{ title: loadedPlace.title , description: loadedPlace.description }}\r\n      validate={values => {\r\n        const errors = {};\r\n        if (!values.title) {\r\n          errors.title = 'Required';\r\n        } \r\n        return errors;\r\n      }}\r\n      onSubmit={async (values, { setSubmitting }) => {\r\n        \r\n          setSubmitting(false);\r\n          setIsLoading(true);\r\n          try{\r\n            const response = await fetch(`https://places-appstream.herokuapp.com/api/places/${placeId}`, {\r\n              method: 'PATCH',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify({\r\n                title: values.title,\r\n                description: values.description\r\n              })\r\n            });\r\n            const responseData = await response.json();\r\n            // console.log(responseData);\r\n            if (!response.ok) {\r\n              throw new Error(responseData.message);\r\n            }\r\n            setIsLoading(false);\r\n            history.push('/');\r\n          } catch (err) {\r\n            setIsLoading(false);\r\n            setError(err.message || 'Something went wrong, please try again.');\r\n          }\r\n        \r\n      \r\n\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        /* and other goodies */\r\n      }) => (\r\n        <React.Fragment>\r\n          <ErrorModal error={error} onClear={errorHandler} />\r\n        <form onSubmit={handleSubmit} className =\"place-form\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.title}\r\n          />\r\n          <label>Description</label>\r\n          <textarea\r\n            type=\"text\"\r\n            name=\"description\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            rows={3}\r\n            value={values.description}\r\n          />\r\n          <button type=\"submit\" disabled={isSubmitting}>\r\n            Update Place\r\n          </button>\r\n        </form>\r\n        </React.Fragment>\r\n      )}\r\n    </Formik>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default UpdatePlace;\r\n","import React, {useState, useContext} from 'react';\r\nimport { Formik } from 'formik';\r\nimport { AuthContext } from '../../shared/components/context/auth-context';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\r\n\r\nimport './Auth.css';\r\n\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n    \r\n    const [isLoginMode, setIsLoginMode] = useState(true);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n \r\n    const switchModeHandler = () => {\r\n        setIsLoginMode(prevMode => !prevMode);\r\n    }\r\n\r\n    const errorHandler = () => {\r\n      setError(null);\r\n    };\r\n    return(\r\n        <div className='form-control'>\r\n          <Formik \r\n            initialValues={{name:'', email: '', password: '' }}\r\n            validate={values => {\r\n            const errors = {};\r\n            if (!values.name) {\r\n              errors.name = 'Required';\r\n          }\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (\r\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n            ) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            }\r\n            return errors;\r\n            }}\r\n            onSubmit={async (values, { setSubmitting }) => {\r\n                \r\n              setSubmitting(false);\r\n              setIsLoading(true);\r\n\r\n              if (isLoginMode) {\r\n                try{\r\n                  const response = await fetch('https://places-appstream.herokuapp.com/api/users/login', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                      'Content-Type': 'application/json',\r\n                    },\r\n                  \r\n                    body: JSON.stringify({\r\n                      email: values.email,\r\n                      password: values.password \r\n                    })\r\n                  });\r\n                  const responseData = await response.json();\r\n                  // console.log(responseData);\r\n                  if (!response.ok) {\r\n                    throw new Error(responseData.message);\r\n                  }\r\n                  setIsLoading(false);\r\n                  auth.login(responseData.user.id);\r\n                } catch (err) {\r\n                  setIsLoading(false);\r\n                  setError(err.message || 'Something went wrong, please try again.');\r\n                }\r\n              }\r\n              else{\r\n                try{\r\n                  const response = await fetch('https://places-appstream.herokuapp.com/api/users/signup', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                      'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                      name: values.name,\r\n                      email: values.email,\r\n                      password: values.password\r\n                    })\r\n                  });\r\n                  const responseData = await response.json();\r\n                  // console.log(responseData);\r\n                  if (!response.ok) {\r\n                    throw new Error(responseData.message);\r\n                  }\r\n                  setIsLoading(false);\r\n                  auth.login(responseData.user.id);\r\n                } catch (err) {\r\n                  setIsLoading(false);\r\n                  setError(err.message || 'Something went wrong, please try again.');\r\n                }\r\n              }\r\n\r\n              // auth.login();\r\n            }}\r\n          >\r\n\r\n          \r\n            {({\r\n              values,\r\n              errors,\r\n              touched,\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              isSubmitting,\r\n            }) => (\r\n              <React.Fragment>\r\n              <ErrorModal error={error} onClear={errorHandler} />\r\n              <Card className=\"authentication\">\r\n                {isLoading && <LoadingSpinner asOverlay />}\r\n              <form onSubmit={handleSubmit} className =\"place-form\">\r\n              <label>Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.name}\r\n                />\r\n                <p style={{color:\"red\"}}>{errors.name && touched.name && errors.name}</p>\r\n                <label>Email</label>\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.email}\r\n                />\r\n                <p style={{color:\"red\"}}>{errors.email && touched.email && errors.email}</p>\r\n                <label>Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.password}\r\n                />\r\n                 <p style={{color:\"red\"}}>{errors.password && touched.password && errors.password}</p>\r\n                <button type=\"submit\" disabled={isSubmitting}>\r\n                {isLoginMode ? \"LogIn\" : \"SignUp\"}\r\n                </button>\r\n                <button type=\"reset\" style={{backgroundColor:\"red\", border:\"none\"}} onClick={switchModeHandler}>Switch to {isLoginMode ? \"SignUp\" : \"Login\"}</button>\r\n              </form>\r\n              </Card>\r\n              </React.Fragment>\r\n            )}\r\n            \r\n          </Formik>\r\n          \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Auth;\r\n\r\n\r\n","import './App.css';\nimport React, {useState, useCallback} from 'react';\nimport {BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\nimport Users from './user/pages/Users';\nimport NewPlace from './places/pages/NewPlace';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport UserPlaces from './places/pages/UserPlaces';\nimport UpdatePlace from './places/pages/UpdatePlace';\nimport Auth from './user/pages/Auth';\nimport {AuthContext} from './shared/components/context/auth-context';\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback(uid => {\n    setIsLoggedIn(true);\n    setUserId(uid);\n  }, []);\n\n    const logout = useCallback(() => {\n      setIsLoggedIn(false);\n      setUserId(null);\n      },[])  \n\n  let routes;\n  \n  if (isLoggedIn){\n    routes = (\n      <Switch>\n      <Route path=\"/\" exact>\n        <Users />\n      </Route>\n      <Route path=\"/:userId/places\" exact>\n        <UserPlaces />\n      </Route>\n      <Route path=\"/places/new\" exact>\n        <NewPlace/>\n      </Route>\n      <Route path=\"/places/:placeId\">\n        <UpdatePlace />\n      </Route>\n      <Redirect to=\"/\" />\n  </Switch>\n    );\n  }\n\n  else {\n    routes = (\n      <Switch>\n            <Route path=\"/\" exact>\n              <Users />\n            </Route>\n            <Route path=\"/:userId/places\" exact>\n              <UserPlaces />\n            </Route>\n            <Route path=\"/auth\">\n              <Auth />\n            </Route>\n            <Redirect to=\"/auth\" />\n          </Switch>\n    );\n  }\n  return (\n  <AuthContext.Provider value ={{isLoggedIn:isLoggedIn, userId: userId, login:login, logout:logout}}>\n  <Router>\n    <MainNavigation />\n    <main>\n      {routes}\n    </main>\n  </Router>\n  </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}